{"version":3,"sources":["services/authService.js","pages/home.js","components/fields/username.js","components/fields/password.js","components/utils/formValidator.js","components/forms/loginForm.js","components/fields/email.js","components/fields/confirmPassword.js","components/forms/registrationForm.js","pages/errorPage.js","services/hocFunctions/protectedRoute.js","App.js","index.js"],"names":["API_URL","api","axios","create","baseURL","headers","Home","history","useHistory","className","type","onClick","localStorage","removeItem","push","Username","username","handleFormInput","error","usernameRef","useRef","useEffect","length","current","classList","replace","nextSibling","innerText","htmlFor","id","ref","name","value","autoComplete","required","placeholder","onChange","e","Password","password","passwordRef","FormValidation","formInput","formState","errorState","target","test","email","firstName","lastName","confirmPassword","LoginForm","useState","loginError","setLoginError","formRef","setFormInput","setError","returnForm","returnError","prevError","prevFormInput","src","alt","onSubmit","preventDefault","data","post","JSON","stringify","then","response","access","setItem","Login","catch","responseError","detail","defaultValue","to","Email","emailRef","ConfirmPassword","confirmPasswordRef","RegistrationForm","handleFormSubmit","Register","password2","first_name","last_name","console","log","errorData","Object","prototype","hasOwnProperty","call","prevFieldError","ErrorPage","href","ProtectedRoute","Component","component","rest","isAuthenticated","getItem","render","props","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d3c1fe4.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const API_URL = 'https://twittercloneinvozone.herokuapp.com';\nexport const api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-type': 'application/json',\n  },\n});\n\nexport function Login(data = {}) {\n  return api\n    .post(`${API_URL}/api/login/`, JSON.stringify(data))\n    .then((response) => {\n      if (response.data.access) {\n        localStorage.setItem('user', JSON.stringify(response.data));\n        localStorage.setItem('isAuthenticated', true);\n      }\n      return response.data;\n    });\n}\nexport function Register(data = {}) {\n  return api.post(`${API_URL}/api/register/`, JSON.stringify(data));\n}\nexport function Logout() {\n  localStorage.removeItem('user');\n  localStorage.removeItem('isAuthenticated');\n}\nexport function GetCurrentUser() {\n  return JSON.parse(localStorage.getItem('user'));\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Logout } from '../services/authService';\n// import AccessControl from '../services/hocFunctions/accessControl';\n\nfunction Home() {\n  const history = useHistory();\n  const handleClick = () => {\n    Logout();\n    history.push('/login');\n  };\n  return (\n    <>\n      <button className=\"bg-green-500 m-3\" type=\"button\" onClick={handleClick}>Logout</button>\n    </>\n  );\n}\n\nexport default Home;\n","import React, { useEffect, useRef } from 'react';\n\nconst Username = ({ username, handleFormInput, error }) => {\n  const usernameRef = useRef();\n  useEffect(() => {\n    if (error.username.length > 0) {\n      usernameRef.current.classList.replace('focus:border-indigo-500', 'focus:border-red-500');\n      usernameRef.current.nextSibling.innerText = error.username;\n    } else {\n      usernameRef.current.classList.replace('focus:border-red-500', 'focus:border-indigo-500');\n      usernameRef.current.nextSibling.innerText = '';\n    }\n  });\n  return (\n    <div>\n      <label htmlFor=\"username-address\" className=\"sr-only\">\n        Username address\n      </label>\n      <input\n        id=\"username-address\"\n        ref={usernameRef}\n        name=\"username\"\n        type=\"username\"\n        value={username}\n        autoComplete=\"username\"\n        required\n        className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n        placeholder=\"Username\"\n        onChange={(e) => handleFormInput(e)}\n      />\n      <span className=\"flex items-center font-medium tracking-wide text-red-500 text-xs mt-1 ml-1\" />\n    </div>\n  );\n};\nexport default Username;\n","import React, { useEffect, useRef } from 'react';\n\nexport default function Password({ password, handleFormInput, error }) {\n  const passwordRef = useRef();\n  useEffect(() => {\n    if (error.password.length > 0) {\n      passwordRef.current.classList.replace('focus:border-indigo-500', 'focus:border-red-500');\n      passwordRef.current.nextSibling.innerText = error.password;\n    } else {\n      passwordRef.current.classList.replace('focus:border-red-500', 'focus:border-indigo-500');\n      passwordRef.current.nextSibling.innerText = '';\n    }\n  });\n  return (\n    <div>\n      <label htmlFor=\"password\" className=\"sr-only\">\n        Password\n      </label>\n      <input\n        id=\"password\"\n        name=\"password\"\n        ref={passwordRef}\n        type=\"password\"\n        value={password}\n        autoComplete=\"current-password\"\n        required\n        className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n        placeholder=\"Password\"\n        onChange={(e) => handleFormInput(e)}\n      />\n      <span className=\"flex items-center font-medium tracking-wide text-red-500 text-xs mt-1 ml-1\" />\n    </div>\n  );\n}\n","export default function FormValidation(e, formInput, error) {\n  const formState = formInput;\n  const errorState = error;\n  if (e.target.name === 'username') {\n    formState.username = e.target.value;\n    const regexp = /^\\S*$/;\n    if (formState.username.length > 0 && !regexp.test(formState.username)) {\n      errorState.username = 'No whitespace allowed';\n    } else if (formState.username.length > 0 && formState.username.length < 5) {\n      errorState.username = 'Username must be 5 character';\n    } else {\n      errorState.username = '';\n    }\n  }\n  if (e.target.name === 'password') {\n    formState.password = e.target.value;\n    if (formState.password.length < 8 && formState.password.length > 0) {\n      errorState.password = 'Password must be of 8 characters';\n    } else {\n      errorState.password = '';\n    }\n  }\n  if (e.target.name === 'email') {\n    formState.email = e.target.value;\n    const validRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    if (!validRegex.test(formState.email) && formState.email.length > 0) {\n      errorState.email = 'Email must be valid';\n    } else {\n      errorState.email = '';\n    }\n  }\n  if (e.target.name === 'firstName') {\n    formState.firstName = e.target.value;\n  }\n  if (e.target.name === 'lastName') {\n    formState.lastName = e.target.value;\n  }\n  if (e.target.name === 'confirmPassword') {\n    formState.confirmPassword = e.target.value;\n    if (formInput.password !== formInput.confirmPassword) {\n      errorState.confirmPassword = \"Password doesn't match\";\n    } else {\n      errorState.confirmPassword = '';\n    }\n  }\n  return [formState, errorState];\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { LockClosedIcon } from '@heroicons/react/solid';\nimport { Link, useHistory } from 'react-router-dom';\nimport Username from '../fields/username';\nimport Password from '../fields/password';\nimport FormValidation from '../utils/formValidator';\nimport { Login } from '../../services/authService';\n\nexport default function LoginForm() {\n  const [loginError, setLoginError] = useState('');\n  const formRef = useRef();\n  const history = useHistory();\n  const [formInput, setFormInput] = useState({\n    username: '',\n    password: '',\n  });\n  const [error, setError] = useState({\n    username: '',\n    password: '',\n  });\n\n  useEffect(() => {\n    formRef.current.innerText = loginError;\n  });\n\n  const handleFormInput = (e) => {\n    const [returnForm, returnError] = FormValidation(e, formInput, error);\n    setError((prevError) => (\n      {\n        ...prevError,\n        username: returnError.username,\n        password: returnError.password,\n      }\n    ));\n    setFormInput((prevFormInput) => (\n      {\n        ...prevFormInput,\n        username: returnForm.username,\n        password: returnForm.password,\n      }\n    ));\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    Login(formInput)\n      .then(() => {\n        setLoginError('');\n        history.push('/');\n      })\n      .catch((responseError) => {\n        setLoginError(responseError.response.data.detail);\n      });\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <img\n            className=\"mx-auto h-12 w-auto\"\n            src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\n            alt=\"Workflow\"\n          />\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Sign in to your account</h2>\n        </div>\n        <form className=\"mt-8 space-y-6\" onSubmit={handleFormSubmit}>\n          <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\n          <div className=\"rounded-md shadow-sm -space-y-px\">\n            <Username\n              username={formInput.username}\n              handleFormInput={handleFormInput}\n              error={error}\n            />\n            <Password\n              password={formInput.password}\n              handleFormInput={handleFormInput}\n              error={error}\n            />\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <span ref={formRef} className=\"flex items-center font-medium tracking-wide text-red-500 text-xs mt-1 ml-1\" />\n            <div className=\"text-sm\">\n              <Link to=\"/register\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n                If you do not have account then sign up!\n              </Link>\n            </div>\n          </div>\n          <div>\n            <button\n              type=\"submit\"\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n              <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n                <LockClosedIcon className=\"h-5 w-5 text-indigo-500 group-hover:text-indigo-400\" aria-hidden=\"true\" />\n              </span>\n              Sign in\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useRef } from 'react';\n\nconst Email = ({ email, handleFormInput, error }) => {\n  const emailRef = useRef();\n  useEffect(() => {\n    if (error.email.length > 0) {\n      emailRef.current.classList.replace('focus:border-indigo-500', 'focus:border-red-500');\n      emailRef.current.nextSibling.innerText = error.email;\n    } else {\n      emailRef.current.classList.replace('focus:border-red-500', 'focus:border-indigo-500');\n      emailRef.current.nextSibling.innerText = '';\n    }\n  });\n  return (\n    <div>\n      <label htmlFor=\"email-address\" className=\"sr-only\">\n        Email address\n      </label>\n      <input\n        id=\"email-address\"\n        ref={emailRef}\n        name=\"email\"\n        type=\"email\"\n        value={email}\n        autoComplete=\"email\"\n        required\n        className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n        placeholder=\"Email address\"\n        onChange={(e) => handleFormInput(e)}\n      />\n      <span className=\"flex items-center font-medium tracking-wide text-red-500 text-xs mt-1 ml-1\" />\n    </div>\n  );\n};\nexport default Email;\n","import React, { useEffect, useRef } from 'react';\n\nexport default function ConfirmPassword({ confirmPassword, handleFormInput, error }) {\n  const confirmPasswordRef = useRef();\n  useEffect(() => {\n    if (error.confirmPassword.length > 0) {\n      confirmPasswordRef.current.classList.replace('focus:border-indigo-500', 'focus:border-red-500');\n      confirmPasswordRef.current.nextSibling.innerText = error.confirmPassword;\n    } else {\n      confirmPasswordRef.current.classList.replace('focus:border-red-500', 'focus:border-indigo-500');\n      confirmPasswordRef.current.nextSibling.innerText = '';\n    }\n  });\n  return (\n    <div>\n      <label htmlFor=\"confirmPassword\" className=\"sr-only\">\n        Password\n      </label>\n      <input\n        id=\"confirmPassword\"\n        name=\"confirmPassword\"\n        ref={confirmPasswordRef}\n        type=\"password\"\n        value={confirmPassword}\n        autoComplete=\"current-confirmPassword\"\n        required\n        className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n        placeholder=\"Confirm Password\"\n        onChange={(e) => handleFormInput(e)}\n      />\n      <span className=\"flex items-center font-medium tracking-wide text-red-500 text-xs mt-1 ml-1\" />\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { LockClosedIcon } from '@heroicons/react/solid';\nimport { Link } from 'react-router-dom';\nimport Username from '../fields/username';\nimport Password from '../fields/password';\nimport Email from '../fields/email';\nimport FormValidation from '../utils/formValidator';\nimport ConfirmPassword from '../fields/confirmPassword';\nimport { Register } from '../../services/authService';\n\nexport default function RegistrationForm() {\n  const [formInput, setFormInput] = useState({\n    username: '',\n    email: '',\n    firstName: '',\n    lastName: '',\n    password: '',\n    confirmPassword: '',\n  });\n  const [error, setError] = useState(\n    {\n      username: '',\n      email: '',\n      firstName: '',\n      lastName: '',\n      password: '',\n      confirmPassword: '',\n    },\n  );\n\n  const handleFormInput = (e) => {\n    const [returnForm, returnError] = FormValidation(e, formInput, error);\n    setError((prevError) => (\n      {\n        ...prevError,\n        username: returnError.username,\n        password: returnError.password,\n        email: returnError.email,\n        firstName: returnError.firstName,\n        lastName: returnError.lastName,\n        confirmPassword: returnError.confirmPassword,\n      }\n    ));\n    setFormInput((prevFormInput) => (\n      {\n        ...prevFormInput,\n        username: returnForm.username,\n        password: returnForm.password,\n        email: returnForm.email,\n        firstName: returnForm.firstName,\n        lastName: returnForm.lastName,\n        confirmPassword: returnForm.confirmPassword,\n      }\n    ));\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    const formData = {\n      email: formInput.email,\n      username: formInput.username,\n      password: formInput.password,\n      password2: formInput.confirmPassword,\n      first_name: formInput.firstName,\n      last_name: formInput.lastName,\n    };\n    Register(formData)\n      .then((response) => console.log(response.data))\n      .catch((responseError) => {\n        const errorData = responseError.response.data;\n        if (Object.prototype.hasOwnProperty.call(errorData, 'email')) {\n          setError((prevFieldError) => (\n            {\n              ...prevFieldError,\n              email: 'Email is already taken',\n            }\n          ));\n        }\n        if (Object.prototype.hasOwnProperty.call(errorData, 'username')) {\n          setError((prevFieldError) => (\n            {\n              ...prevFieldError,\n              username: 'Username is already taken',\n            }\n          ));\n        }\n      });\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <img\n            className=\"mx-auto h-12 w-auto\"\n            src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\n            alt=\"Workflow\"\n          />\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Register your account</h2>\n        </div>\n        <form className=\"mt-8 space-y-6\" onSubmit={(e) => handleFormSubmit(e)}>\n          <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\n          <div className=\"rounded-md shadow-sm -space-y-px\">\n            <Username\n              username={formInput.username}\n              handleFormInput={handleFormInput}\n              error={error}\n            />\n            <Email\n              email={formInput.email}\n              handleFormInput={handleFormInput}\n              error={error}\n            />\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <label htmlFor=\"first-name\" className=\"sr-only\">\n                  First Name\n                </label>\n                <input\n                  id=\"first-name\"\n                  name=\"firstName\"\n                  type=\"firstName\"\n                  autoComplete=\"firstName\"\n                  required\n                  value={formInput.firstName}\n                  className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                  placeholder=\"First Name\"\n                  onChange={(e) => handleFormInput(e)}\n                />\n                <span className=\"flex items-center font-medium tracking-wide text-red-500 text-xs mt-1 ml-1\" />\n              </div>\n              <div>\n                <label htmlFor=\"last-name\" className=\"sr-only\">\n                  Last Name\n                </label>\n                <input\n                  id=\"last-name\"\n                  name=\"lastName\"\n                  type=\"lastName\"\n                  autoComplete=\"lastName\"\n                  required\n                  value={formInput.lastName}\n                  className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                  placeholder=\"Last Name\"\n                  onChange={(e) => handleFormInput(e)}\n                />\n                <span className=\"flex items-center font-medium tracking-wide text-red-500 text-xs mt-1 ml-1\" />\n              </div>\n            </div>\n            <Password\n              password={formInput.password}\n              handleFormInput={handleFormInput}\n              error={error}\n            />\n            <ConfirmPassword\n              confirmPassword={formInput.confirmPassword}\n              handleFormInput={handleFormInput}\n              error={error}\n            />\n          </div>\n          <div className=\"flex items-center justify-end\">\n            <div className=\"text-sm\">\n              <Link to=\"/login\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n                If already have an account then sign in!\n              </Link>\n            </div>\n          </div>\n\n          <div>\n            <button\n              type=\"submit\"\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n              <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n                <LockClosedIcon className=\"h-5 w-5 text-indigo-500 group-hover:text-indigo-400\" aria-hidden=\"true\" />\n              </span>\n              Register\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function ErrorPage() {\n  return (\n    <div className=\"bg-white min-h-screen px-4 py-16 sm:px-6 sm:py-24 md:grid md:place-items-center lg:px-8\">\n      <div className=\"max-w-max mx-auto\">\n        <main className=\"sm:flex\">\n          <p className=\"text-4xl font-extrabold text-indigo-600 sm:text-5xl\">404</p>\n          <div className=\"sm:ml-6\">\n            <div className=\"sm:border-l sm:border-gray-200 sm:pl-6\">\n              <h1 className=\"text-4xl font-extrabold text-gray-900 tracking-tight sm:text-5xl\">Page not found</h1>\n              <p className=\"mt-1 text-base text-gray-500\">Please check the URL in the address bar and try again.</p>\n            </div>\n            <div className=\"mt-10 flex space-x-3 sm:border-l sm:border-transparent sm:pl-6\">\n              <a\n                href=\"/\"\n                className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              >\n                Go back home\n              </a>\n              <a\n                href=\"/\"\n                className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-indigo-700 bg-indigo-100 hover:bg-indigo-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              >\n                Contact support\n              </a>\n            </div>\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport default function ProtectedRoute({ component: Component, ...rest }) {\n  const isAuthenticated = localStorage.getItem('isAuthenticated');\n  return (\n    <Route\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...rest}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      render={(props) => (isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />)}\n    />\n  );\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './pages/home';\nimport LoginForm from './components/forms/loginForm';\nimport RegistrationForm from './components/forms/registrationForm';\nimport ErrorPage from './pages/errorPage';\nimport ProtectedRoute from './services/hocFunctions/protectedRoute';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <ProtectedRoute exact path=\"/\" component={Home} />\n        <Route path=\"/login\" component={LoginForm} exact />\n        <Route path=\"/register\" component={RegistrationForm} exact />\n        <Route component={ErrorPage} />\n      </Switch>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}